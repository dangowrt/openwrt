From c62fdcd9c931f5923abc5ffdecd4e2883a31e9ef Mon Sep 17 00:00:00 2001
From: Paul Spooren <mail@aparcar.org>
Date: Tue, 29 Mar 2022 15:44:37 +0100
Subject: [PATCH 3/4] WIP: use opkg version compare algorithm

Signed-off-by: Paul Spooren <mail@aparcar.org>
---
 src/version.c | 70 +++++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 68 insertions(+), 2 deletions(-)

--- a/src/version.c
+++ b/src/version.c
@@ -12,6 +12,70 @@
 #include "apk_defines.h"
 #include "apk_version.h"
 
+/*
+ * libdpkg - Debian packaging suite library routines
+ * vercmp.c - comparison of version numbers
+ *
+ * Copyright (C) 1995 Ian Jackson <iwj10@cus.cam.ac.uk>
+ */
+
+/* assume ascii; warning: evaluates x multiple times! */
+#define order(x) ((x) == '~' ? -1 \
+		: isdigit((x)) ? 0 \
+		: !(x) ? 0 \
+		: isalpha((x)) ? (x) \
+		: (x) + 256)
+
+static int verrevcmp(apk_blob_t a, apk_blob_t b)
+{
+	char *val = a.ptr;
+	char *ref = b.ptr;
+
+	if (!val)
+		val = "";
+	if (!ref)
+		ref = "";
+
+	while ((val - a.ptr) < a.len  || (ref - b.ptr) < b.len) {
+		int first_diff = 0;
+
+		while ((((val - a.ptr) < a.len) && !isdigit(*val)) || (((ref - b.ptr) < b.len) && !isdigit(*ref))) {
+			int vc = order(*val), rc = order(*ref);
+			if (vc != rc) {
+				if (vc - rc)
+					return APK_VERSION_LESS;
+				else
+					return APK_VERSION_GREATER;
+			}
+			val++;
+			ref++;
+		}
+
+		while (*val == '0')
+			val++;
+		while (*ref == '0')
+			ref++;
+		while (isdigit(*val) && isdigit(*ref)) {
+			if (!first_diff)
+				first_diff = *val - *ref;
+			val++;
+			ref++;
+		}
+		if (isdigit(*val))
+			return APK_VERSION_GREATER;
+		if (isdigit(*ref))
+			return APK_VERSION_LESS;
+		if (first_diff) {
+			if (first_diff > 0)
+				return APK_VERSION_GREATER;
+			else
+				return APK_VERSION_LESS;
+		}
+
+	}
+	return APK_VERSION_EQUAL;
+}
+
 /* Gentoo version: {digit}{.digit}...{letter}{_suf{#}}...{-r#} */
 
 enum PARTS {
@@ -192,6 +256,7 @@ int apk_version_result_mask(const char *
 
 int apk_version_validate(apk_blob_t ver)
 {
+	return 1;
 	int t = TOKEN_DIGIT;
 
 	while (t != TOKEN_END && t != TOKEN_INVALID)
@@ -251,10 +316,11 @@ int apk_version_compare_blob_fuzzy(apk_b
 
 int apk_version_compare_blob(apk_blob_t a, apk_blob_t b)
 {
-	return apk_version_compare_blob_fuzzy(a, b, FALSE);
+	return verrevcmp(a, b);
+	// return apk_version_compare_blob_fuzzy(a, b, FALSE);
 }
 
 int apk_version_compare(const char *str1, const char *str2)
 {
-	return apk_version_compare_blob(APK_BLOB_STR(str1), APK_BLOB_STR(str2));
+	return verrevcmp(APK_BLOB_STR(str1), APK_BLOB_STR(str2));
 }
